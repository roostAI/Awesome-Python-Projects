# Test generated by RoostGPT for test awesome-python-ceaser-cipher using AI Type Open AI and AI Model gpt-4

import unittest
from cipher import decrypt

class TestDecrypt(unittest.TestCase):

    def TestDecrypt_10c2ea9e76(self):
        # Test with a simple message and decryption number
        result = decrypt("I love Python Programming.", 3)
        self.assertEqual(result, "F kbiq Ovslk Lrkhfklkk.")

        # Test with a message contains numbers and decryption number
        result = decrypt("Python 3.8.5", 5)
        self.assertEqual(result, "Ktojd 8.3.0")

        # Test with a complex message contains special characters and decryption number
        result = decrypt("Python! @#$%^&*()_+|?><:{}", 7)
        self.assertEqual(result, "Izovdu! @#$%^&*()_+|?><:{}")

        # Test with an empty message and decryption number
        result = decrypt("", 3)
        self.assertEqual(result, "")

        # Test with a message and decryption number as 0
        result = decrypt("Python Programming", 0)
        self.assertEqual(result, "Python Programming")

        # Test with a message contains non-ascii characters and decryption number
        result = decrypt("Python Программирование", 5)
        self.assertEqual(result, "Ktojd Программирование")

        # Test with a message and a negative decryption number
        result = decrypt("Python Programming", -3)
        self.assertEqual(result, "Python Programming")

if __name__ == '__main__':
    unittest.main()
